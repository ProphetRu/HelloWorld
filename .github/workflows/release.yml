name: Build

on:
  push:
    branches:
      - master
      - feature/github_actions
  workflow_dispatch:

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install CMake
        run: sudo apt-get update && sudo apt-get install cmake -y
      - name: Build and Test
        run: |
          git clone https://github.com/google/googletest.git
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build . --config Release
          ctest
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release Ubuntu ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset Ubuntu
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build and Test
        run: |
          git clone https://github.com/google/googletest.git
          cmake . -DPATCH_VERSION=${{ github.run_number }}
          cmake --build . --config Release
          ctest
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release Windows ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset Windows
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Release/helloworld.exe
          asset_name: helloworld-0.0.${{ github.run_number }}-Windows.exe
          asset_content_type: application/octet-stream
